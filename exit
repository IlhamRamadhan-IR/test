[33mcommit 898550629bc348ea1ed6d2039678da6a1d6206d1[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m)[m
Author: ilhaamr <iramadhan706.ir@gmail.com>
Date:   Wed Sep 21 14:17:13 2022 +0700

    first

[1mdiff --git a/app/controllers/base_controller.go b/app/controllers/base_controller.go[m
[1mnew file mode 100644[m
[1mindex 0000000..992cb27[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/base_controller.go[m
[36m@@ -0,0 +1,106 @@[m
[32m+[m[32mpackage controllers[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"fmt"[m
[32m+[m	[32m"log"[m
[32m+[m	[32m"net/http"[m
[32m+[m	[32m"os"[m
[32m+[m
[32m+[m	[32m"github.com/gieart87/gotoko/app/models"[m
[32m+[m	[32m"github.com/gieart87/gotoko/database/seeders"[m
[32m+[m	[32m"github.com/gorilla/mux"[m
[32m+[m	[32m"github.com/urfave/cli"[m
[32m+[m	[32m"gorm.io/driver/mysql"[m
[32m+[m	[32m"gorm.io/driver/postgres"[m
[32m+[m	[32m"gorm.io/gorm"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mtype Server struct {[m
[32m+[m	[32mDB     *gorm.DB[m
[32m+[m	[32mRouter *mux.Router[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtype AppConfig struct {[m
[32m+[m	[32mAppName string[m
[32m+[m	[32mAppEnv  string[m
[32m+[m	[32mAppPort string[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mtype DBConfig struct {[m
[32m+[m	[32mDBHost     string[m
[32m+[m	[32mDBUser     string[m
[32m+[m	[32mDBPassword string[m
[32m+[m	[32mDBName     string[m
[32m+[m	[32mDBPort     string[m
[32m+[m	[32mDBDriver   string[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (server *Server) Initialize(appConfig AppConfig, dbConfig DBConfig) {[m
[32m+[m	[32mfmt.Println("Welcome to " + appConfig.AppName)[m
[32m+[m
[32m+[m	[32mserver.initializeDB(dbConfig)[m
[32m+[m	[32mserver.initializeRoutes()[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (server *Server) Run(addr string) {[m
[32m+[m	[32mfmt.Printf("Listening to port %s", addr)[m
[32m+[m	[32mlog.Fatal(http.ListenAndServe(addr, server.Router))[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (server *Server) initializeDB(dbConfig DBConfig) {[m
[32m+[m	[32mvar err error[m
[32m+[m	[32mif dbConfig.DBDriver == "mysql" {[m
[32m+[m		[32mdsn := fmt.Sprintf("%s:%s@tcp(%s:%s)/%s?charset=utf8mb4&parseTime=True&loc=Local", dbConfig.DBUser, dbConfig.DBPassword, dbConfig.DBHost, dbConfig.DBPort, dbConfig.DBName)[m
[32m+[m		[32mserver.DB, err = gorm.Open(mysql.Open(dsn), &gorm.Config{})[m
[32m+[m	[32m} else {[m
[32m+[m		[32mdsn := fmt.Sprintf("host=%s user=%s password=%s dbname=%s port=%s sslmode=disable TimeZone=Asia/Jakarta", dbConfig.DBHost, dbConfig.DBUser, dbConfig.DBPassword, dbConfig.DBName, dbConfig.DBPort)[m
[32m+[m		[32mserver.DB, err = gorm.Open(postgres.Open(dsn), &gorm.Config{})[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mpanic("Failed on connecting to the database server")[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (server *Server) dbMigrate() {[m
[32m+[m	[32mfor _, model := range models.RegisterModels() {[m
[32m+[m		[32merr := server.DB.Debug().AutoMigrate(model.Model)[m
[32m+[m
[32m+[m		[32mif err != nil {[m
[32m+[m			[32mlog.Fatal(err)[m
[32m+[m		[32m}[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mfmt.Println("Database migrated successfully.")[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (server *Server) InitCommands(config AppConfig, dbConfig DBConfig) {[m
[32m+[m	[32mserver.initializeDB(dbConfig)[m
[32m+[m
[32m+[m	[32mcmdApp := cli.NewApp()[m
[32m+[m	[32mcmdApp.Commands = []cli.Command{[m
[32m+[m		[32m{[m
[32m+[m			[32mName: "db:migrate",[m
[32m+[m			[32mAction: func(c *cli.Context) error {[m
[32m+[m				[32mserver.dbMigrate()[m
[32m+[m				[32mreturn nil[m
[32m+[m			[32m},[m
[32m+[m		[32m},[m
[32m+[m		[32m{[m
[32m+[m			[32mName: "db:seed",[m
[32m+[m			[32mAction: func(c *cli.Context) error {[m
[32m+[m				[32merr := seeders.DBSeed(server.DB)[m
[32m+[m				[32mif err != nil {[m
[32m+[m					[32mlog.Fatal(err)[m
[32m+[m				[32m}[m
[32m+[m
[32m+[m				[32mreturn nil[m
[32m+[m			[32m},[m
[32m+[m		[32m},[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32merr := cmdApp.Run(os.Args)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mlog.Fatal(err)[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/app/controllers/home_controller.go b/app/controllers/home_controller.go[m
[1mnew file mode 100644[m
[1mindex 0000000..56577dd[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/home_controller.go[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mpackage controllers[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"net/http"[m
[32m+[m
[32m+[m	[32m"github.com/unrolled/render"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mfunc (server *Server) Home(w http.ResponseWriter, r *http.Request) {[m
[32m+[m	[32mrender := render.New(render.Options{[m
[32m+[m		[32mLayout: "layout",[m
[32m+[m	[32m})[m
[32m+[m
[32m+[m	[32m_ = render.HTML(w, http.StatusOK, "home", map[string]interface{}{[m
[32m+[m		[32m"title": "Home Title",[m
[32m+[m		[32m"body":  "Home Description",[m
[32m+[m	[32m})[m
[32m+[m[32m}[m
[1mdiff --git a/app/controllers/product_controller.go b/app/controllers/product_controller.go[m
[1mnew file mode 100644[m
[1mindex 0000000..b43d00f[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/product_controller.go[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mpackage controllers[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"net/http"[m
[32m+[m
[32m+[m	[32m"github.com/gieart87/gotoko/app/models"[m
[32m+[m
[32m+[m	[32m"github.com/unrolled/render"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mfunc (server *Server) Products(w http.ResponseWriter, r *http.Request) {[m
[32m+[m	[32mrender := render.New(render.Options{[m
[32m+[m		[32mLayout: "layout",[m
[32m+[m	[32m})[m
[32m+[m
[32m+[m	[32mproductModel := models.Product{}[m
[32m+[m	[32mproducts, err := productModel.GetProducts(server.DB)[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32m_ = render.HTML(w, http.StatusOK, "products", map[string]interface{}{[m
[32m+[m		[32m"products": products,[m
[32m+[m	[32m})[m
[32m+[m[32m}[m
[1mdiff --git a/app/controllers/routes.go b/app/controllers/routes.go[m
[1mnew file mode 100644[m
[1mindex 0000000..0a4e1a0[m
[1m--- /dev/null[m
[1m+++ b/app/controllers/routes.go[m
[36m@@ -0,0 +1,17 @@[m
[32m+[m[32mpackage controllers[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"net/http"[m
[32m+[m
[32m+[m	[32m"github.com/gorilla/mux"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mfunc (server *Server) initializeRoutes() {[m
[32m+[m	[32mserver.Router = mux.NewRouter()[m
[32m+[m	[32mserver.Router.HandleFunc("/", server.Home).Methods("GET")[m
[32m+[m	[32mserver.Router.HandleFunc("/products", server.Products).Methods("GET")[m
[32m+[m
[32m+[m	[32mstaticFileDirectory := http.Dir("./assets/")[m
[32m+[m	[32mstaticFileHandler := http.StripPrefix("/public/", http.FileServer(staticFileDirectory))[m
[32m+[m	[32mserver.Router.PathPrefix("/public/").Handler(staticFileHandler).Methods("GET")[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/address.go b/app/models/address.go[m
[1mnew file mode 100644[m
[1mindex 0000000..ddd1daf[m
[1m--- /dev/null[m
[1m+++ b/app/models/address.go[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mimport "time"[m
[32m+[m
[32m+[m[32mtype Address struct {[m
[32m+[m	[32mID         string `gorm:"size:36;not null;uniqueIndex;primary_key"`[m
[32m+[m	[32mUser       User[m
[32m+[m	[32mUserID     string `gorm:"size:36;index"`[m
[32m+[m	[32mName       string `gorm:"size:100"`[m
[32m+[m	[32mIsPrimary  bool[m
[32m+[m	[32mCityID     string `gorm:"size:100"`[m
[32m+[m	[32mProvinceID string `gorm:"size:100"`[m
[32m+[m	[32mAddress1   string `gorm:"size:255"`[m
[32m+[m	[32mAddress2   string `gorm:"size:255"`[m
[32m+[m	[32mPhone      string `gorm:"size:100"`[m
[32m+[m	[32mEmail      string `gorm:"size:100"`[m
[32m+[m	[32mPostCode   string `gorm:"size:100"`[m
[32m+[m	[32mCreatedAt  time.Time[m
[32m+[m	[32mUpdatedAt  time.Time[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/category.go b/app/models/category.go[m
[1mnew file mode 100644[m
[1mindex 0000000..fe5d9b3[m
[1m--- /dev/null[m
[1m+++ b/app/models/category.go[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mimport "time"[m
[32m+[m
[32m+[m[32mtype Category struct {[m
[32m+[m	[32mID        string `gorm:"size:36;not null;uniqueIndex;primary_key"`[m
[32m+[m	[32mParentID  string `gorm:"size:36;"`[m
[32m+[m	[32mSection   Section[m
[32m+[m	[32mSectionID string    `gorm:"size:36;index"`[m
[32m+[m	[32mProducts  []Product `gorm:"many2many:product_categories;"`[m
[32m+[m	[32mName      string    `gorm:"size:100;"`[m
[32m+[m	[32mSlug      string    `gorm:"size:100;"`[m
[32m+[m	[32mCreatedAt time.Time[m
[32m+[m	[32mUpdatedAt time.Time[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/order.go b/app/models/order.go[m
[1mnew file mode 100644[m
[1mindex 0000000..35c422e[m
[1m--- /dev/null[m
[1m+++ b/app/models/order.go[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"time"[m
[32m+[m
[32m+[m	[32m"gorm.io/gorm"[m
[32m+[m
[32m+[m	[32m"github.com/shopspring/decimal"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mtype Order struct {[m
[32m+[m	[32mID                  string `gorm:"size:36;not null;uniqueIndex;primary_key"`[m
[32m+[m	[32mUserID              string `gorm:"size:36;index"`[m
[32m+[m	[32mUser                User[m
[32m+[m	[32mOrderItems          []OrderItem[m
[32m+[m	[32mOrderCustomer       *OrderCustomer[m
[32m+[m	[32mCode                string `gorm:"size:50;index"`[m
[32m+[m	[32mStatus              int[m
[32m+[m	[32mOrderDate           time.Time[m
[32m+[m	[32mPaymentDue          time.Time[m
[32m+[m	[32mPaymentStatus       string          `gorm:"size:50;index"`[m
[32m+[m	[32mPaymentToken        string          `gorm:"size:100;index"`[m
[32m+[m	[32mBaseTotalPrice      decimal.Decimal `gorm:"type:decimal(16,2)"`[m
[32m+[m	[32mTaxAmount           decimal.Decimal `gorm:"type:decimal(16,2)"`[m
[32m+[m	[32mTaxPercent          decimal.Decimal `gorm:"type:decimal(10,2)"`[m
[32m+[m	[32mDiscountAmount      decimal.Decimal `gorm:"type:decimal(16,2)"`[m
[32m+[m	[32mDiscountPercent     decimal.Decimal `gorm:"type:decimal(10,2)"`[m
[32m+[m	[32mShippingCost        decimal.Decimal `gorm:"type:decimal(16,2)"`[m
[32m+[m	[32mGrandTotal          decimal.Decimal `gorm:"type:decimal(16,2)"`[m
[32m+[m	[32mNote                string          `gorm:"type:text"`[m
[32m+[m	[32mShippingCourier     string          `gorm:"size:100"`[m
[32m+[m	[32mShippingServiceName string          `gorm:"size:100"`[m
[32m+[m	[32mApprovedBy          string          `gorm:"size:36"`[m
[32m+[m	[32mApprovedAt          time.Time[m
[32m+[m	[32mCancelledBy         string `gorm:"size:36"`[m
[32m+[m	[32mCancelledAt         time.Time[m
[32m+[m	[32mCancellationNote    string `gorm:"size:255"`[m
[32m+[m	[32mCreatedAt           time.Time[m
[32m+[m	[32mUpdatedAt           time.Time[m
[32m+[m	[32mDeletedAt           gorm.DeletedAt[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/order_customer.go b/app/models/order_customer.go[m
[1mnew file mode 100644[m
[1mindex 0000000..314dc91[m
[1m--- /dev/null[m
[1m+++ b/app/models/order_customer.go[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mimport "time"[m
[32m+[m
[32m+[m[32mtype OrderCustomer struct {[m
[32m+[m	[32mID         string `gorm:"size:36;not null;uniqueIndex;primary_key"`[m
[32m+[m	[32mUser       User[m
[32m+[m	[32mUserID     string `gorm:"size:36;index"`[m
[32m+[m	[32mOrder      Order[m
[32m+[m	[32mOrderID    string `gorm:"size:36;index"`[m
[32m+[m	[32mFirstName  string `gorm:"size:100;not null"`[m
[32m+[m	[32mLastName   string `gorm:"size:100;not null"`[m
[32m+[m	[32mCityID     string `gorm:"size:100;"`[m
[32m+[m	[32mProvinceID string `gorm:"size:100;"`[m
[32m+[m	[32mAddress1   string `gorm:"size:100;"`[m
[32m+[m	[32mAddress2   string `gorm:"size:100;"`[m
[32m+[m	[32mPhone      string `gorm:"size:50;"`[m
[32m+[m	[32mEmail      string `gorm:"size:100;"`[m
[32m+[m	[32mPostCode   string `gorm:"size:100;"`[m
[32m+[m	[32mCreatedAt  time.Time[m
[32m+[m	[32mUpdatedAt  time.Time[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/order_item.go b/app/models/order_item.go[m
[1mnew file mode 100644[m
[1mindex 0000000..138ddb9[m
[1m--- /dev/null[m
[1m+++ b/app/models/order_item.go[m
[36m@@ -0,0 +1,28 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"time"[m
[32m+[m
[32m+[m	[32m"github.com/shopspring/decimal"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mtype OrderItem struct {[m
[32m+[m	[32mID              string `gorm:"size:36;not null;uniqueIndex;primary_key"`[m
[32m+[m	[32mOrder           Order[m
[32m+[m	[32mOrderID         string `gorm:"size:36;index"`[m
[32m+[m	[32mProduct         Product[m
[32m+[m	[32mProductID       string `gorm:"size:36;index"`[m
[32m+[m	[32mQty             int[m
[32m+[m	[32mBasePrice       decimal.Decimal `gorm:"type:decimal(16,2)"`[m
[32m+[m	[32mBaseTotal       decimal.Decimal `gorm:"type:decimal(16,2)"`[m
[32m+[m	[32mTaxAmount       decimal.Decimal `gorm:"type:decimal(16,2)"`[m
[32m+[m	[32mTaxPercent      decimal.Decimal `gorm:"type:decimal(10,2)"`[m
[32m+[m	[32mDiscountAmount  decimal.Decimal `gorm:"type:decimal(16,2)"`[m
[32m+[m	[32mDiscountPercent decimal.Decimal `gorm:"type:decimal(10,2)"`[m
[32m+[m	[32mSubTotal        decimal.Decimal `gorm:"type:decimal(16,2)"`[m
[32m+[m	[32mSku             string          `gorm:"size:36;index"`[m
[32m+[m	[32mName            string          `gorm:"size:255"`[m
[32m+[m	[32mWeight          decimal.Decimal `gorm:"type:decimal(10,2)"`[m
[32m+[m	[32mCreatedAt       time.Time[m
[32m+[m	[32mUpdatedAt       time.Time[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/payment.go b/app/models/payment.go[m
[1mnew file mode 100644[m
[1mindex 0000000..19b9a5b[m
[1m--- /dev/null[m
[1m+++ b/app/models/payment.go[m
[36m@@ -0,0 +1,27 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"time"[m
[32m+[m
[32m+[m	[32m"github.com/shopspring/decimal"[m
[32m+[m	[32m"gorm.io/gorm"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mtype Payment struct {[m
[32m+[m	[32mID          string `gorm:"size:36;not null;uniqueIndex;primary_key"`[m
[32m+[m	[32mOrder       Order[m
[32m+[m	[32mOrderID     string          `gorm:"size:36;index"`[m
[32m+[m	[32mNumber      string          `gorm:"size:100;index"`[m
[32m+[m	[32mAmount      decimal.Decimal `gorm:"type:decimal(16,2)"`[m
[32m+[m	[32mMethod      string          `gorm:"size:100"`[m
[32m+[m	[32mStatus      string          `gorm:"size:100"`[m
[32m+[m	[32mToken       string          `gorm:"size:100;index"`[m
[32m+[m	[32mPayload     string          `gorm:"type:text"`[m
[32m+[m	[32mPaymentType string          `gorm:"size:100"`[m
[32m+[m	[32mVaNumber    string          `gorm:"size:100"`[m
[32m+[m	[32mBillCode    string          `gorm:"size:100"`[m
[32m+[m	[32mBillKey     string          `gorm:"size:100"`[m
[32m+[m	[32mCreatedAt   time.Time[m
[32m+[m	[32mUpdatedAt   time.Time[m
[32m+[m	[32mDeletedAt   gorm.DeletedAt[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/product.go b/app/models/product.go[m
[1mnew file mode 100644[m
[1mindex 0000000..4b9f333[m
[1m--- /dev/null[m
[1m+++ b/app/models/product.go[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"time"[m
[32m+[m
[32m+[m	[32m"github.com/shopspring/decimal"[m
[32m+[m	[32m"gorm.io/gorm"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mtype Product struct {[m
[32m+[m	[32mID               string `gorm:"size:36;not null;uniqueIndex;primary_key"`[m
[32m+[m	[32mParentID         string `gorm:"size:36;index"`[m
[32m+[m	[32mUser             User[m
[32m+[m	[32mUserID           string `gorm:"size:36;index"`[m
[32m+[m	[32mProductImages    []ProductImage[m
[32m+[m	[32mCategories       []Category      `gorm:"many2many:product_categories;"`[m
[32m+[m	[32mSku              string          `gorm:"size:100;index"`[m
[32m+[m	[32mName             string          `gorm:"size:255"`[m
[32m+[m	[32mSlug             string          `gorm:"size:255"`[m
[32m+[m	[32mPrice            decimal.Decimal `gorm:"type:decimal(16,2);"`[m
[32m+[m	[32mStock            int[m
[32m+[m	[32mWeight           decimal.Decimal `gorm:"type:decimal(10,2);"`[m
[32m+[m	[32mShortDescription string          `gorm:"type:text"`[m
[32m+[m	[32mDescription      string          `gorm:"type:text"`[m
[32m+[m	[32mStatus           int             `gorm:"default:0"`[m
[32m+[m	[32mCreatedAt        time.Time[m
[32m+[m	[32mUpdatedAt        time.Time[m
[32m+[m	[32mDeletedAt        gorm.DeletedAt[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc (p *Product) GetProducts(db *gorm.DB) (*[]Product, error) {[m
[32m+[m	[32mvar err error[m
[32m+[m	[32mvar products []Product[m
[32m+[m
[32m+[m	[32merr = db.Debug().Model(&Product{}).Limit(20).Find(&products).Error[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mreturn nil, err[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn &products, nil[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/product_image.go b/app/models/product_image.go[m
[1mnew file mode 100644[m
[1mindex 0000000..e94584f[m
[1m--- /dev/null[m
[1m+++ b/app/models/product_image.go[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"time"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mtype ProductImage struct {[m
[32m+[m	[32mID         string `gorm:"size:36;not null;uniqueIndex;primary_key"`[m
[32m+[m	[32mProduct    Product[m
[32m+[m	[32mProductID  string `gorm:"size:36;index"`[m
[32m+[m	[32mPath       string `gorm:"type:text"`[m
[32m+[m	[32mExtraLarge string `gorm:"type:text"`[m
[32m+[m	[32mLarge      string `gorm:"type:text"`[m
[32m+[m	[32mMedium     string `gorm:"type:text"`[m
[32m+[m	[32mSmall      string `gorm:"type:text"`[m
[32m+[m	[32mCreatedAt  time.Time[m
[32m+[m	[32mUpdatedAt  time.Time[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/registry.go b/app/models/registry.go[m
[1mnew file mode 100644[m
[1mindex 0000000..92ea0cc[m
[1m--- /dev/null[m
[1m+++ b/app/models/registry.go[m
[36m@@ -0,0 +1,21 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mtype Model struct {[m
[32m+[m	[32mModel interface{}[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc RegisterModels() []Model {[m
[32m+[m	[32mreturn []Model{[m
[32m+[m		[32m{Model: User{}},[m
[32m+[m		[32m{Model: Address{}},[m
[32m+[m		[32m{Model: Product{}},[m
[32m+[m		[32m{Model: ProductImage{}},[m
[32m+[m		[32m{Model: Section{}},[m
[32m+[m		[32m{Model: Category{}},[m
[32m+[m		[32m{Model: Order{}},[m
[32m+[m		[32m{Model: OrderItem{}},[m
[32m+[m		[32m{Model: OrderCustomer{}},[m
[32m+[m		[32m{Model: Payment{}},[m
[32m+[m		[32m{Model: Shipment{}},[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/section.go b/app/models/section.go[m
[1mnew file mode 100644[m
[1mindex 0000000..eafdf05[m
[1m--- /dev/null[m
[1m+++ b/app/models/section.go[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mimport "time"[m
[32m+[m
[32m+[m[32mtype Section struct {[m
[32m+[m	[32mID         string `gorm:"size:36;not null;uniqueIndex;primary_key"`[m
[32m+[m	[32mName       string `gorm:"size:100;"`[m
[32m+[m	[32mSlug       string `gorm:"size:100;"`[m
[32m+[m	[32mCreatedAt  time.Time[m
[32m+[m	[32mUpdatedAt  time.Time[m
[32m+[m	[32mCategories []Category[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/shipment.go b/app/models/shipment.go[m
[1mnew file mode 100644[m
[1mindex 0000000..16e677a[m
[1m--- /dev/null[m
[1m+++ b/app/models/shipment.go[m
[36m@@ -0,0 +1,34 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"time"[m
[32m+[m
[32m+[m	[32m"github.com/shopspring/decimal"[m
[32m+[m	[32m"gorm.io/gorm"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mtype Shipment struct {[m
[32m+[m	[32mID          string `gorm:"size:36;not null;uniqueIndex;primary_key"`[m
[32m+[m	[32mUser        User[m
[32m+[m	[32mUserID      string `gorm:"size:36;index"`[m
[32m+[m	[32mOrder       Order[m
[32m+[m	[32mOrderID     string `gorm:"size:36;index"`[m
[32m+[m	[32mTrackNumber string `gorm:"size:255;index"`[m
[32m+[m	[32mStatus      string `gorm:"size:36;index"`[m
[32m+[m	[32mTotalQty    int[m
[32m+[m	[32mTotalWeight decimal.Decimal `gorm:"type:decimal(10,2);"`[m
[32m+[m	[32mFirstName   string          `gorm:"size:100;not null"`[m
[32m+[m	[32mLastName    string          `gorm:"size:100;not null"`[m
[32m+[m	[32mCityID      string          `gorm:"size:100;"`[m
[32m+[m	[32mProvinceID  string          `gorm:"size:100;"`[m
[32m+[m	[32mAddress1    string          `gorm:"size:100;"`[m
[32m+[m	[32mAddress2    string          `gorm:"size:100;"`[m
[32m+[m	[32mPhone       string          `gorm:"size:50;"`[m
[32m+[m	[32mEmail       string          `gorm:"size:100;"`[m
[32m+[m	[32mPostCode    string          `gorm:"size:100;"`[m
[32m+[m	[32mShippedBy   string          `gorm:"size:36"`[m
[32m+[m	[32mShippedAt   time.Time[m
[32m+[m	[32mCreatedAt   time.Time[m
[32m+[m	[32mUpdatedAt   time.Time[m
[32m+[m	[32mDeletedAt   gorm.DeletedAt[m
[32m+[m[32m}[m
[1mdiff --git a/app/models/user.go b/app/models/user.go[m
[1mnew file mode 100644[m
[1mindex 0000000..7df069b[m
[1m--- /dev/null[m
[1m+++ b/app/models/user.go[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mpackage models[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"time"[m
[32m+[m
[32m+[m	[32m"gorm.io/gorm"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mtype User struct {[m
[32m+[m	[32mID            string `gorm:"size:36;not null;uniqueIndex;primary_key"`[m
[32m+[m	[32mAddresses     []Address[m
[32m+[m	[32mFirstName     string `gorm:"size:100;not null"`[m
[32m+[m	[32mLastName      string `gorm:"size:100;not null"`[m
[32m+[m	[32mEmail         string `gorm:"size:100;not null;uniqueIndex"`[m
[32m+[m	[32mPassword      string `gorm:"size:255;not null"`[m
[32m+[m	[32mRememberToken string `gorm:"size:255;not null"`[m
[32m+[m	[32mCreatedAt     time.Time[m
[32m+[m	[32mUpdatedAt     time.Time[m
[32m+[m	[32mDeletedAt     gorm.DeletedAt[m
[32m+[m[32m}[m
[1mdiff --git a/app/server.go b/app/server.go[m
[1mnew file mode 100644[m
[1mindex 0000000..9f017d5[m
[1m--- /dev/null[m
[1m+++ b/app/server.go[m
[36m@@ -0,0 +1,51 @@[m
[32m+[m[32mpackage app[m
[32m+[m
[32m+[m[32mimport ([m
[32m+[m	[32m"flag"[m
[32m+[m	[32m"log"[m
[32m+[m	[32m"os"[m
[32m+[m
[32m+[m	[32m"github.com/gieart87/gotoko/app/controllers"[m
[32m+[m
[32m+[m	[32m"github.com/joho/godotenv"[m
[32m+[m[32m)[m
[32m+[m
[32m+[m[32mfunc getEnv(key, fallback string) string {[m
[32m+[m	[32mif value, ok := os.LookupEnv(key); ok {[m
[32m+[m		[32mreturn value[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mreturn fallback[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunc Run() {[m
[32m+[m	[32mvar server = controllers.Server{}[m
[32m+[m	[32mvar appConfig = controllers.AppConfig{}[m
[32m+[m	[32mvar dbConfig = controllers.DBConfig{}[m
[32m+[m
[32m+[m	[32merr := godotenv.Load()[m
[32m+[m	[32mif err != nil {[m
[32m+[m		[32mlog.Fatalf("Error on loading .env file")[m
[32m+[m	[32m}[m
[32m+[m
[32m+[m	[32mappConfig.AppName = getEnv("APP_NAME", "GoToko")[m
[32m+[m	[32mappConfig.AppEnv = getEnv("APP_ENV", "development")[m
[32m+[m	[32mappConfig.AppPort = getEnv("APP_PORT", "9000")[m
[32m+[m
[32m+[m	[32mdbConfig.DBHost = getEnv("DB_HOST", "localhost")[m
[32m+[m	[32mdbConfig.DBUser = getEnv("DB_USER", "user")[m
[32m+[m	[32mdbConfig.DBPassword = getEnv("DB_PASSWORD", "password")[m
[32m+[m	[32mdbConfig.DBName = getEnv("DB_NAME", "dbname")[m
[32m+[m	[32mdbConfig.DBPort = getEnv("DB_PORT", "5432")[m
[32m+[m	[32mdbConfig.DBDriver = getEnv("DB_DRIVER", "postgres")[m
[32m+[m
[32m+[m	[32mflag.Parse()[m
[32m+[m	[32marg := flag.Arg(0)[m
[32m+[m
[32m+[m	[32mif arg != "" {[m
[32m+[m		[32mserver.InitCommands(appConfig, dbConfig)[m
[32m+[m	[32m} else {[m
[32m+[m		[32mserver.Initialize(appConfig, dbConfig)[m
[32m+[m		[32mserver.Run(":" + appConfig.AppPort)[m
[32m+[m	[32m}[m
[32m+[m[32m}[m
